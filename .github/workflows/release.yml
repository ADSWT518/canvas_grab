name: Create Release

on:
  push:
    paths-ignore:
      - 'README.md'
      - 'LICENSE'

jobs:
  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install Dependencies
      id: install_dep
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt
    - name: Packaging with PyInstaller
      id: packaging_pyinstaller
      run: |
        pyinstaller main.py --hidden-import pkg_resources.py2_warn --add-data 'config.example.toml;.' -n canvas_grab
    - name: Create tar Package
      run: |
        tar -czf canvas_grab.tar.gz dist/canvas_grab
    - name: Create ZIP Package
      run: |
        Compress-Archive -Path dist/canvas_grab -DestinationPath canvas_grab.zip
    - name: Create Release
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: ${{ github.event.head_commit.message }}
        draft: false
        prerelease: false
    - name: Upload Release (ZIP)
      id: upload_release
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./canvas_grab.zip
        asset_name: canvas_grab-windows.zip
        asset_content_type: application/zip
    - name: Upload Release (tar)
      id: upload_release_tar
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./canvas_grab.tar.gz
        asset_name: canvas_grab-windows.tar.gz
        asset_content_type: application/tar+gzip